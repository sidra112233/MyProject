<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Modern Dashboard</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
  <style>
:root {
  --yale-blue: #134074;
  --berkeley-blue: #13315c;
  --oxford-blue: #0b2545;
  --powder-blue: #8da9c4;
  --mint-cream: #eef4ed;
  --hover-highlight: var(--powder-blue);
}
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
body {
  font-family: 'Poppins', sans-serif;
  position: relative;
  z-index: 0;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background: var(--mint-cream);
  color: var(--oxford-blue);
  transition: background 0.3s, color 0.3s;
}
body.dark-mode {
  background: #121212;
  color: #f0f0f0;
}
canvas#bg {
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
}
/* Top Bar */
.top-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: linear-gradient(135deg, #1e293b, #0f172a);
  color: white;
  padding: 0 24px;
  height: 60px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 0;
  z-index: 1000;
}
.top-bar-left {
  display: flex;
  align-items: center;
  gap: 15px;
}
.top-bar-right {
  display: flex;
  align-items: center;
  gap: 15px;
}
.dashboard-title {
  font-size: 1.5rem;
  font-weight: 700;
  background: linear-gradient(135deg, #3b82f6, #8b5cf6);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}
/* Menu Toggle */
.menu-toggle {
  display: none;
  flex-direction: column;
  justify-content: space-between;
  width: 24px;
  height: 18px;
  cursor: pointer;
  z-index: 1001;
}
.menu-toggle span {
  display: block;
  height: 3px;
  width: 100%;
  background-color: white;
  border-radius: 3px;
  transition: all 0.3s ease-in-out;
}
.menu-toggle.active span:nth-child(1) {
  transform: rotate(45deg) translate(5px, 5px);
}
.menu-toggle.active span:nth-child(2) {
  opacity: 0;
}
.menu-toggle.active span:nth-child(3) {
  transform: rotate(-45deg) translate(7px, -6px);
}
/* Profile Dropdown */
.profile-dropdown {
  position: relative;
  display: inline-block;
  cursor: pointer;
  z-index: 1003;
}
.profile-icon {
  font-size: 22px;
  color: white;
  transition: color 0.3s;
}
.profile-menu {
  display: none;
  position: absolute;
  right: 0;
  top: 40px;
  background-color: white;
  color: var(--oxford-blue);
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  padding: 10px 15px;
  min-width: 160px;
  z-index: 1002;
  animation: fadeIn 0.3s ease-in-out;
}
.profile-menu.show {
  display: block;
}
.profile-menu span {
  display: block;
  margin-bottom: 10px;
  font-weight: 500;
  font-size: 14px;
}
.profile-menu a {
  text-decoration: none;
  color: var(--yale-blue);
  font-size: 14px;
  display: block;
  padding: 6px 0;
  transition: color 0.3s;
}
.profile-menu a:hover {
  color: var(--berkeley-blue);
}
body.dark-mode .profile-menu {
  background-color: #1e1e1e;
  color: #fff;
}
body.dark-mode .profile-menu a {
  color: #f0f0f0;
}
body.dark-mode .profile-menu a:hover {
  color: #ffcc00;
}
/* Toggle Button */
.toggle-btn {
  background: var(--oxford-blue);
  color: white;
  border: none;
  padding: 8px 12px;
  border-radius: 6px;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  transition: all 0.3s ease;
}
.toggle-btn:hover {
  background: var(--yale-blue);
  transform: translateY(-2px);
}
/* Navbar */
.navbar {
  display: flex;
  align-items: center;
  background: linear-gradient(135deg, #1e293b, #0f172a);
  color: white;
  padding: 0 24px;
  height: 60px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 60px;
  z-index: 999;
  overflow-x: visible;
  white-space: nowrap;
}
.navbar a {
  color: #e2e8f0;
  text-decoration: none;
  padding: 8px 16px;
  border-radius: 8px;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 8px;
  transition: all 0.2s ease;
  position: relative;
  flex-shrink: 0;
}
.navbar a:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: white;
  transform: translateY(-2px);
}
.navbar a i {
  font-size: 1rem;
}
/* Dropdown Styles */
.dropdown {
  position: relative;
  display: inline-block;
  margin: 0 4px;
  flex-shrink: 0;
  z-index: 1100;
}
.dropbtn {
  background: none;
  border: none;
  color: #e2e8f0;
  padding: 8px 16px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  border-radius: 8px;
  display: flex;
  align-items: center;
  gap: 8px;
  transition: all 0.2s ease;
  flex-shrink: 0;
}
.dropbtn:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: white;
  transform: translateY(-2px);
}
.dropdown-content {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  margin-top: 8px;
  background-color: white;
  min-width: 220px;
  border-radius: 12px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
  z-index: 1200;
  overflow: hidden;
  opacity: 0;
  transform: translateY(-10px);
  transition: all 0.3s ease;
}
.dropdown.show .dropdown-content {
  display: block;
  opacity: 1;
  transform: translateY(0);
  animation: slideDown 0.3s ease;
}
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.dropdown-content a {
  color: #334155;
  padding: 12px 16px;
  text-decoration: none;
  display: flex;
  align-items: center;
  gap: 12px;
  transition: all 0.2s ease;
  background-color: white;
}
.dropdown-content a:hover {
  background-color: #f1f5f9;
  color: #1e40af;
  transform: translateX(5px);
}
.dropdown-content a i {
  width: 20px;
  text-align: center;
  color: #64748b;
}
.dropdown-content a:hover i {
  color: #1e40af;
}

/* Mobile Responsive Styles */
@media (max-width: 768px) {
  /* Show menu toggle on mobile */
  .menu-toggle {
    display: flex;
  }
  
  /* Hide navbar by default on mobile */
  .navbar {
    display: none;
    flex-direction: column;
    height: auto;
    padding: 10px;
    position: fixed;
    top: 60px;
    left: 0;
    width: 100%;
    max-height: calc(100vh - 60px);
    overflow-y: auto;
    z-index: 998;
  }
  
  /* Show navbar when menu toggle is active */
  .navbar.active {
    display: flex;
  }
  
  /* Adjust navbar items for mobile */
  .navbar a, .dropbtn {
    width: 100%;
    justify-content: flex-start;
    padding: 12px 16px;
  }
  
  /* Adjust dropdowns for mobile */
  .dropdown {
    width: 100%;
  }
  
  .dropdown-content {
    position: static;
    display: none;
    width: 100%;
    margin-top: 0;
    box-shadow: none;
    background-color: rgba(255, 255, 255, 0.1);
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, opacity 0.3s ease;
  }
  
  .dropdown.active .dropdown-content {
    display: block;
    max-height: 500px;
    opacity: 1;
  }
  
  .dropdown-content a {
    padding-left: 40px;
    background-color: transparent;
    color: #e2e8f0;
  }
  
  .dropdown-content a:hover {
    background-color: rgba(255, 255, 255, 0.1);
    color: white;
    transform: none;
  }
  
  /* Adjust profile dropdown for mobile */
  .profile-menu {
    right: -10px;
    min-width: 180px;
  }
}
</style>
</head>
<body>
<canvas id="bg"></canvas>
  
  <!-- Top Bar -->
  <div class="top-bar">
    <div class="top-bar-left">
      <div class="menu-toggle" id="menuToggle">
        <span></span>
        <span></span>
        <span></span>
      </div>
       <h2 class="dashboard-title">Dashboard</h2>
    
    </div>
    
    <div class="top-bar-right">
     
      <button class="toggle-btn" onclick="toggleDarkMode()">
        <i class="fas fa-moon"></i>
      </button>
        <div class="profile-dropdown" onclick="toggleProfileMenu()">
        <i class="fas fa-user-circle profile-icon"></i>
        <div id="profileMenu" class="profile-menu">
          <span><%= user.username || user.email %></span>
          <a href="/profile">Profile</a>
          <a href="/settings">Settings</a>
          <a href="/login">Logout</a>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Navigation Bar -->
  <nav class="navbar" id="navbar">
    <a href="/dashboard" class="active">
      <i class="fas fa-chart-line"></i> Dashboard
    </a>
    
    <div class="dropdown" id="inboundDropdown">
      <button class="dropbtn" onclick="toggleDropdown('inboundDropdown')">
        <i class="fas fa-phone-incoming"></i> Inbound 
        <i class="fas fa-caret-down"></i>
      </button>
      <div class="dropdown-content">
        <a href="/inbound/calls">
          <i class="fas fa-phone"></i> Calls
        </a>
        <a href="/inbound/review">
          <i class="fas fa-star"></i> Review
        </a>
        <a href="/inbound/notes">
          <i class="fas fa-sticky-note"></i> Notes
        </a>
        <a href="/inbound/add">
          <i class="fas fa-plus-circle"></i> Add New
        </a>
        <a href="/inbound/callbacks">
          <i class="fas fa-redo-alt"></i> Call Backs
        </a>
        <a href="/inbound/missed">
          <i class="fas fa-phone-slash"></i> Missed Calls
        </a>
      </div>
    </div>
    
    <div class="dropdown" id="outboundDropdown">
      <button class="dropbtn" onclick="toggleDropdown('outboundDropdown')">
        <i class="fas fa-phone-outgoing"></i> Outbound 
        <i class="fas fa-caret-down"></i>
      </button>
      <div class="dropdown-content">
        <a href="/outbound/leads">
          <i class="fas fa-user-plus"></i> Leads
        </a>
        <a href="/outbound/calls">
          <i class="fas fa-phone"></i> Calls
        </a>
        <a href="/outbound/tasks">
          <i class="fas fa-tasks"></i> Tasks
        </a>
        <a href="/outbound/callbacks">
          <i class="fas fa-redo-alt"></i> Call Backs
        </a>
      </div>
    </div>
    
    <div class="dropdown" id="customersDropdown">
      <button class="dropbtn" onclick="toggleDropdown('customersDropdown')">
        <i class="fas fa-users"></i> Customers 
      </button>
      <div class="dropdown-content">
        <a href="/customers/list">
          <i class="fas fa-list"></i> Lists
        </a>
        <a href="/customers/accounts">
          <i class="fas fa-envelope"></i> Outlook Accounts
        </a>
      </div>
    </div>
    
    <a href="/languages">
      <i class="fas fa-language"></i> Languages
    </a>
    
    <div class="dropdown" id="attendanceDropdown">
      <button class="dropbtn" onclick="toggleDropdown('attendanceDropdown')">
        <i class="fas fa-calendar-check"></i> Attendance
      </button>
      <div class="dropdown-content">
        <a href="/attendance/history">
          <i class="fas fa-history"></i> History
        </a>
        <a href="/attendance/update">
          <i class="fas fa-pen"></i> Add/Update
        </a>
      </div>
    </div>
    
    <a href="/roster">
      <i class="fas fa-calendar-week"></i> Weekly Roster
    </a>
    
    <div class="dropdown" id="chatsDropdown">
      <button class="dropbtn" onclick="toggleDropdown('chatsDropdown')">
        Chats <i class="fas fa-comments"></i>
      </button>
      <div class="dropdown-content">
        <a href="/chats/dashboard">
          <i class="fas fa-tachometer-alt"></i> Dashboard
        </a>
        <a href="/chats/messenger">
          <i class="fab fa-facebook-messenger"></i> Messenger
        </a>
        <a href="/chats/fb-comments">
          <i class="fas fa-comment-alt"></i> FB Comments
        </a>
        <a href="/chats/twitter">
          <i class="fab fa-twitter"></i> Twitter
        </a>
        <a href="/chats/instagram">
          <i class="fab fa-instagram"></i> Instagram
        </a>
        <a href="/chats/whatsapp">
          <i class="fab fa-whatsapp"></i> Whatsapp 
          <span class="dot"></span>
        </a>
        <a href="/chats/wb-whatsapp">
          <i class="fab fa-whatsapp-square"></i> WB Whatsapp 
          <span class="dot"></span>
        </a>
        <a href="/chats/outlook">
          <i class="fas fa-th"></i> Outlook Emails 
          <span class="dot"></span>
        </a>
        <a href="/chats/gmail">
          <i class="far fa-envelope"></i> Google Emails 
          <span class="dot"></span>
        </a>
        <a href="/chats/web-chat">
          <i class="fas fa-comments"></i> Web Chat 
          <span class="dot"></span>
        </a>
        <a href="/chats/tickets">
          <i class="fas fa-ticket-alt"></i> Tickets
        </a>
        <a href="/chats/haier-gulf">
          <i class="fas fa-industry"></i> Haier Gulf
        </a>
      </div>
    </div>
    
    <div class="dropdown" id="whatsappDropdown">
      <button class="dropbtn" onclick="toggleDropdown('whatsappDropdown')">
        <i class="fab fa-whatsapp"></i> WB Whatsapp 
      </button>
      <div class="dropdown-content">
        <a href="/whatsapp/numbers">
          <i class="fas fa-hashtag"></i> Numbers
        </a>
        <a href="/whatsapp/reviews">
          <i class="fas fa-star-half-alt"></i> Reviews
        </a>
      </div>
    </div>
  </nav>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function toggleDarkMode() {
      document.body.classList.toggle('dark-mode');
      const toggleBtn = document.querySelector('.toggle-btn i');
      if (document.body.classList.contains('dark-mode')) {
        toggleBtn.classList.remove('fa-moon');
        toggleBtn.classList.add('fa-sun');
      } else {
        toggleBtn.classList.remove('fa-sun');
        toggleBtn.classList.add('fa-moon');
      }
    }
    
    // Animated background using particles
    const canvas = document.getElementById('bg');
    const ctx = canvas.getContext('2d');
    let w = canvas.width = window.innerWidth;
    let h = canvas.height = window.innerHeight;
    let particles = [];
    for(let i = 0; i < 80; i++) {
      particles.push({
        x: Math.random() * w,
        y: Math.random() * h,
        vx: (Math.random() - 0.5) * 0.5,
        vy: (Math.random() - 0.5) * 0.5
      });
    }
    function draw() {
      ctx.clearRect(0, 0, w, h);
      ctx.fillStyle = '#ffffff';
      for(let p of particles) {
        ctx.beginPath();
        ctx.arc(p.x, p.y, 1.5, 0, 2 * Math.PI);
        ctx.fill();
        p.x += p.vx;
        p.y += p.vy;
        if(p.x < 0 || p.x > w) p.vx *= -1;
        if(p.y < 0 || p.y > h) p.vy *= -1;
        for(let q of particles) {
          let dx = p.x - q.x;
          let dy = p.y - q.y;
          let dist = Math.sqrt(dx*dx + dy*dy);
          if(dist < 100) {
            ctx.strokeStyle = 'rgba(255,255,255,' + (1 - dist / 100) + ')';
            ctx.beginPath();
            ctx.moveTo(p.x, p.y);
            ctx.lineTo(q.x, q.y);
            ctx.stroke();
          }
        }
      }
      requestAnimationFrame(draw);
    }
    draw();
    
    // Menu toggle functionality
    const menuToggle = document.getElementById('menuToggle');
    const navbar = document.getElementById('navbar');
    
    menuToggle.addEventListener('click', function() {
      this.classList.toggle('active');
      navbar.classList.toggle('active');
    });
    
    // Profile dropdown functionality
    function toggleProfileMenu() {
      const menu = document.getElementById("profileMenu");
      menu.classList.toggle("show");
      
      // Close all dropdowns when profile menu is opened
      if (menu.classList.contains("show")) {
        document.querySelectorAll('.dropdown').forEach(dropdown => {
          dropdown.classList.remove('show');
        });
      }
    }
    
    // Desktop dropdown functionality
    function toggleDropdown(id) {
      const dropdown = document.getElementById(id);
      const isOpen = dropdown.classList.contains('show');
      
      // Close all dropdowns
      document.querySelectorAll('.dropdown').forEach(d => {
        d.classList.remove('show');
      });
      
      // Close profile menu
      document.getElementById("profileMenu").classList.remove("show");
      
      // Toggle the clicked dropdown
      if (!isOpen) {
        dropdown.classList.add('show');
      }
    }
    
    // Close dropdowns when clicking outside
    window.addEventListener("click", function (e) {
      // Close profile menu when clicking outside
      const profile = document.querySelector(".profile-dropdown");
      const menu = document.getElementById("profileMenu");
      if (!profile.contains(e.target)) {
        menu.classList.remove("show");
      }
      
      // Close dropdowns when clicking outside
      if (!e.target.closest('.dropdown') && !e.target.closest('.dropbtn')) {
        document.querySelectorAll('.dropdown').forEach(dropdown => {
          dropdown.classList.remove('show');
        });
      }
      
      // Close mobile navbar when clicking outside
      if (window.innerWidth <= 768 && 
          !menuToggle.contains(e.target) && 
          !navbar.contains(e.target)) {
        menuToggle.classList.remove('active');
        navbar.classList.remove('active');
      }
    });
    
    // Handle window resize
    window.addEventListener('resize', function() {
      if (window.innerWidth > 768) {
        // Reset mobile view when resizing to desktop
        menuToggle.classList.remove('active');
        navbar.classList.remove('active');
      }
    });
    
    // Add hover behavior for desktop dropdowns
    if (window.innerWidth > 768) {
      document.querySelectorAll('.dropdown').forEach(dropdown => {
        const button = dropdown.querySelector('.dropbtn');
        const content = dropdown.querySelector('.dropdown-content');
        
        dropdown.addEventListener('mouseenter', function() {
          // Close all other dropdowns
          document.querySelectorAll('.dropdown').forEach(d => {
            if (d !== dropdown) {
              d.classList.remove('show');
            }
          });
          
          // Close profile menu
          document.getElementById("profileMenu").classList.remove("show");
          
          // Open this dropdown
          dropdown.classList.add('show');
        });
        
        dropdown.addEventListener('mouseleave', function() {
          // Add a small delay before closing to allow moving to the content
          setTimeout(() => {
            // Only close if the mouse is not over the dropdown anymore
            if (!dropdown.matches(':hover')) {
              dropdown.classList.remove('show');
            }
          }, 300);
        });
      });
    }
  </script>
</body>
</html>